#application
server:
  port: 50500
  tomcat.threads.max: 20
  forward-headers-strategy: FRAMEWORK

spring.threads.virtual.enabled: "true"
process.autostart: true

#monitoring
management:
    endpoint:
      health:
        show-details: never
    endpoints:
      web:
        exposure:
          include: "health,prometheus,heapdump,circuitbreakers"

#tracing
spring.application.name: invoice-process
management.tracing.sampling.probability: "1.0"
logging.level.io.opentelemetry.exporter: "OFF"
management.otlp.tracing.endpoint: "http://localhost:4318/v1/traces"

#security
security.authentication.enabled: false
spring.security.user.name: "admin"
spring.security.user.password: "admin"

#cache
spring.profiles.active: "caffeine" #redis
spring.data.redis.host: "localhost"
spring.data.redis.port: "6379"

#adapter
adapter:
  timeout: 10000
  coreservice:
    url: http://localhost:50800
    user.name: "admin"
    user.password: "admin"
  catalogservice:
#    url: http://localhost:50600

#resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slowCallDurationThreshold: ${adapter.timeout} #Effectively the timeout
        slowCallRateThreshold: 100 #Percentage of calls that that need be registered a slow for the CB to transitions from close to open
        failureRateThreshold: 50 #Failure rate when the Circuit Breaker transitions from closed to open
        waitDurationInOpenState: 30s #Time the CircuitBreaker should wait before transitioning back from open to half-open.
        minimumNumberOfCalls: 5 #The minimum number of calls which are required before the CircuitBreaker can calculate the error rate.
        permittedNumberOfCallsInHalfOpenState: 10 #Number of permitted calls when the CircuitBreaker is half open.
        recordExceptions: "org.springframework.web.client.ResourceAccessException"
  retry:
    configs:
      default:
        maxAttempts: 2
        waitDuration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

#logging
logging.pattern.level: "%5p tenantId=%X{tenantId:-}" #"%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] tenantId=%X{tenantId:-}"

logging.level.root: "WARN"
logging.level.org.springframework: "INFO"

logging.level.org.goafabric: "INFO"
logging.level.org.flywaydb.core: "INFO"
logging.level.org.hibernate.SQL: "INFO"




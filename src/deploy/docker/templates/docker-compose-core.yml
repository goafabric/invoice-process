services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}-native${_Values_server_arch}:3.3.0
    restart: 'no'
    #    ports:
    #      - "${_Values_service_port}:${_Values_service_port}"
    command: ["-Xmx${_Values_resources_requests_memory}"]

    healthcheck:
      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
      disable: ${_Values_health_check_disabled} #disabled for native images because of no curl
      interval: 5s
      timeout: 10s
      retries: 5

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    #      - /Users/andreas/Downloads:/Users/andreas/Downloads
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "${_Values_service_port}"
      server.tomcat.threads.max: "20"
      server.forward-headers-strategy: FRAMEWORK

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.application.name: core-service
      management.tracing.sampling.probability: "1.0"
      logging.level.io.opentelemetry: "OFF"
      management.otlp.tracing.endpoint: "http://host.docker.internal:4318/v1/traces"

      #persistence
      spring.datasource.url: "jdbc:postgresql://postgres:5432/core"
      spring.datasource.hikari.maximum-pool-size: "10"
      spring.datasource.hikari.connection-timeout: "10000"

      multi-tenancy.tenants: "0,5"
      multi-tenancy.schema-prefix: "core_"
      database.provisioning.goals: "-migrate -import-demo-data"

      #sec
      security.authentication.enabled: "false"

      #s3
      spring.cloud.aws.s3.endpoint: "http://s3minio:9000"
      spring.cloud.aws.s3.enabled: "true"

      #secrets
      spring.security.oauth2.client-id: "oauth2-proxy"
      spring.security.oauth2.client-secret: "none"

      spring.datasource.username: "core-service"
      spring.datasource.password: "core-service"

      #log levels
      logging.level.root: "WARN"
      logging.level.org.goafabric: "INFO"
      logging.level.org.springframework: "INFO"
      logging.level.org.flywaydb.core: "INFO"
      logging.level.org.hibernate.SQL:

    depends_on:
      postgres:
        condition: service_healthy